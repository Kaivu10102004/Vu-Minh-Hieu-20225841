import javax.swing.JOptionPane;
import java.util.Scanner;
import java.util.Arrays;
2.2.5
public class Calculate{
	public static void main(String[] args){
		String strNum1, strNum2;
		strNum1 = JOptionPane.showInputDialog("Nhap so thu nhat: ");
		strNum2 = JOptionPane.showInputDialog("Nhap so thu hai: ");
		
	try{
		double num1 = Double.parseDouble(strNum1);
		double num2 = Double.parseDouble(strNum2);
		double sum = num1 + num2;
		double dif = num1 - num2;
		double product = num1 * num2;
		String res;
		if(num2 != 0){
			double quotient = num1/num2;
			res = "Sum: " + sum + "\nDif: " + dif + "\nProduct: " + product + "\nQuotient: " + quotient;
		}
		else{
			res = "Sum: " + sum + "\nDif: " + dif + "\nProduct: " + product + "\nCannot divided to zero";
		}
		JOptionPane.showMessageDialog(null, res);
	}
		catch(NumberFormatException e){
			JOptionPane.showMessageDialog(null, JOptionPane.ERROR_MESSAGE);
		}	

	}
}

2.2.6
public class Equations {
    public static void main(String[] args) {
        String number;
        number = JOptionPane.showInputDialog("Chọn phương trình bạn muốn giải: \n1: PT bậc nhất \n2: PT nhiều biến \n3: PT bậc hai");
        
        if (number.equals("1")) {
            first_degree_one_variable();
        } else if (number.equals("2")) {
            first_degree_many_variables();
        } else if (number.equals("3")) {
            second_degree_one_variable();
        }
    }

    public static void first_degree_one_variable() {
        try {
            double a = Double.parseDouble(JOptionPane.showInputDialog("Nhập a: "));
            double b = Double.parseDouble(JOptionPane.showInputDialog("Nhập b: "));
            double x;

            if (a == 0) {
                if (b != 0) {
                    JOptionPane.showMessageDialog(null, "PT vô nghiệm");
                } else {
                    JOptionPane.showMessageDialog(null, "PT vô số nghiệm");
                }
            } else {
                x = -b / a;
                JOptionPane.showMessageDialog(null, "Giá trị x là: " + x);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập số hợp lệ.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public static void first_degree_many_variables() {
        try {
            double a11 = Double.parseDouble(JOptionPane.showInputDialog("Nhập a11: "));
            double a12 = Double.parseDouble(JOptionPane.showInputDialog("Nhập a12: "));
            double b1 = Double.parseDouble(JOptionPane.showInputDialog("Nhập b1: "));
            double a21 = Double.parseDouble(JOptionPane.showInputDialog("Nhập a21: "));
            double a22 = Double.parseDouble(JOptionPane.showInputDialog("Nhập a22: "));
            double b2 = Double.parseDouble(JOptionPane.showInputDialog("Nhập b2: "));

            double D = a11 * a22 - a21 * a12;
            double D1 = b1 * a22 - b2 * a12;
            double D2 = a11 * b2 - a21 * b1;

            if (D != 0) {
                double x1 = D1 / D;
                double x2 = D2 / D;
                JOptionPane.showMessageDialog(null, "Hệ phương trình có nghiệm duy nhất:\n x1 = " + x1 + "\n x2 = " + x2);
            } else if (D == 0 && D1 == 0 && D2 == 0) {
                JOptionPane.showMessageDialog(null, "Hệ phương trình có vô số nghiệm.");
            } else {
                JOptionPane.showMessageDialog(null, "Hệ phương trình vô nghiệm.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập số hợp lệ.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public static void second_degree_one_variable() {
        try {
            // Nhập hệ số cho phương trình bậc hai
            double a = Double.parseDouble(JOptionPane.showInputDialog("Nhập a: "));
            double b = Double.parseDouble(JOptionPane.showInputDialog("Nhập b: "));
            double c = Double.parseDouble(JOptionPane.showInputDialog("Nhập c: "));

            if (a == 0) {
                JOptionPane.showMessageDialog(null, "Hệ số a không thể bằng 0. Đây không phải là phương trình bậc hai.");
                return;
            }

            // Tính delta (Δ)
            double delta = b * b - 4 * a * c;
            String res;

            if (delta > 0) {
                double x1 = (-b + Math.sqrt(delta)) / (2 * a);
                double x2 = (-b - Math.sqrt(delta)) / (2 * a);
                res = "Phương trình có hai nghiệm phân biệt:\n x1 = " + x1 + "\n x2 = " + x2;
            } else if (delta == 0) {
                double x = -b / (2 * a);
                res = "Phương trình có nghiệm kép: x = " + x;
            } else {
                res = "Phương trình vô nghiệm (không có nghiệm thực).";
            }

            JOptionPane.showMessageDialog(null, res);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập số hợp lệ.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}

6.1
public class ChoosingOption {
	public static void main(String[] args) {
		String[] options = {"Yes", "No", "Cancel"};
		int option = JOptionPane.showOptionDialog(null, 
				"Do you want to change to the first class ticket?",
				"Choose an option",
				JOptionPane.YES_NO_CANCEL_OPTION,
				JOptionPane.QUESTION_MESSAGE,
				null,
				options, // tùy chọn 
				options[0] // tùy chọn mặc định
				);
		if(option == JOptionPane.YES_OPTION) {
			JOptionPane.showMessageDialog(null, "You've chosen: YES");
		}
		else if(option == JOptionPane.NO_OPTION) {
			JOptionPane.showConfirmDialog(null, "You've chosen: NO");
		}
		else if(option == JOptionPane.CANCEL_OPTION){
			JOptionPane.showConfirmDialog(null, "You've chosen: CANCEL");
		}
		else {
			JOptionPane.showConfirmDialog(null, "No option was selected");
		}
		System.exit(0);
	}
}

6.2
public class InputFromKeyboard {
	public static void main(String[] args) {
		Scanner keyboard = new Scanner(System.in);
		
		System.out.println("What's your name?");
		String strName = keyboard.nextLine();
		System.out.println("How old are you?");
		int iAge = keyboard.nextInt();
		System.out.println("How tall are you (m) ?");
		double dHeight = keyboard.nextDouble();
		
		System.out.println("Mrs/Ms. " + strName + ", " + iAge + " years old. " + "Your height is " + dHeight + ".");
		keyboard.close();
	}
}

6.3
public class TriangleStars {
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		System.out.println("Nhap so hang: ");
		int n = scanner.nextInt();
		for(int i = 1; i <= n; i++) {
			for(int j = n; j > i; j--) {
				System.out.print(" ");
			}
			for(int k = 1; k <= (2*i - 1); k++) {
				System.out.print("*");
			}
			System.out.println();
		}
		scanner.close();
	}
	
}

6.4
public class DOM {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.print("Enter the month (e.g., January, Jan, Jan., or a number from 1 to 12): ");
            String monthInput = scanner.nextLine().trim();

            System.out.print("Enter the year (e.g., 1999): ");
            int year;
            try {
                year = Integer.parseInt(scanner.nextLine().trim());
                if (year < 0) {
                    throw new NumberFormatException();
                }
            } catch (NumberFormatException e) {
                System.out.println("Invalid year entered. Please enter a non-negative year.");
                continue;
            }

            int days = getDaysInMonth(monthInput, year);
            if (days != -1) {
                System.out.printf("The month %s of year %d has %d days.%n", monthInput, year, days);
                break;
            } else {
                System.out.println("Invalid month entered. Please enter the month again.");
            }
        }
        scanner.close();
    }

    public static int getDaysInMonth(String month, int year) {
        month = month.toLowerCase();

        int monthNumber;
        switch (month) {
            case "january":
            case "jan":
            case "jan.":
            case "1":
                monthNumber = 1;
                break;
            case "february":
            case "feb":
            case "feb.":
            case "2":
                monthNumber = 2;
                break;
            case "march":
            case "mar":
            case "mar.":
            case "3":
                monthNumber = 3;
                break;
            case "april":
            case "apr":
            case "apr.":
            case "4":
                monthNumber = 4;
                break;
            case "may":
            case "5":
                monthNumber = 5;
                break;
            case "june":
            case "jun":
            case "6":
                monthNumber = 6;
                break;
            case "july":
            case "jul":
            case "7":
                monthNumber = 7;
                break;
            case "august":
            case "aug":
            case "aug.":
            case "8":
                monthNumber = 8;
                break;
            case "september":
            case "sep":
            case "sept":
            case "sept.":
            case "9":
                monthNumber = 9;
                break;
            case "october":
            case "oct":
            case "oct.":
            case "10":
                monthNumber = 10;
                break;
            case "november":
            case "nov":
            case "nov.":
            case "11":
                monthNumber = 11;
                break;
            case "december":
            case "dec":
            case "dec.":
            case "12":
                monthNumber = 12;
                break;
            default:
                return -1; 
        }

        switch (monthNumber) {
            case 1: case 3: case 5: case 7: case 8: case 10: case 12:
                return 31;
            case 4: case 6: case 9: case 11:
                return 30;
            case 2:
                if (isLeapYear(year)) {
                    return 29;
                } else {
                    return 28;
                }
            default:
                return -1; 
        }
    }

    public static boolean isLeapYear(int year) {
        return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
    }
}


6.5
public class Sorting {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the number of elements in the array: ");
        int n = sc.nextInt();
        int[] myArray = new int[n];
        System.out.println("Enter " + n + " elements:");
        for (int i = 0; i < n; i++) {
            System.out.print("Element " + (i + 1) + ": ");
            myArray[i] = sc.nextInt();
        }

        System.out.println("Original Array: " + Arrays.toString(myArray));
        Arrays.sort(myArray);

        System.out.println("Sorted Array: " + Arrays.toString(myArray));

        int sum = 0;
        for (int num : myArray) {
            sum += num;
        }

        double average = (double) sum / n;

        System.out.println("Sum of array elements: " + sum);
        System.out.println("Average value of array elements: " + average);

        sc.close();
    }
}

6.6
public class Two_Matrix {
   

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of rows in the matrices: ");
        int rows = scanner.nextInt();
        System.out.print("Enter the number of columns in the matrices: ");
        int columns = scanner.nextInt();

        int[][] matrix1 = new int[rows][columns];
        int[][] matrix2 = new int[rows][columns];
        int[][] myMatrix = new int[rows][columns];

        System.out.println("Enter the elements of the first matrix:");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < columns; j++) {
                System.out.printf("matrix1[%d][%d] = ", i, j);
                matrix1[i][j] = scanner.nextInt();
            }
        }

        System.out.println("Enter the elements of the second matrix:");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < columns; j++) {
                System.out.printf("matrix2[%d][%d] = ", i, j);
                matrix2[i][j] = scanner.nextInt();
            }
        }

        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < columns; j++) {
                myMatrix[i][j] = matrix1[i][j] + matrix2[i][j];
            }
        }

        System.out.println("Sum of the two matrices is:");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < columns; j++) {
                System.out.print(myMatrix[i][j] + " ");
            }
            System.out.println();
        }

        scanner.close();
    }
}

